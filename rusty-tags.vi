!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AVOID	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const AVOID: &'static str = "Î²ÃºÃ§Æ™Â¥";$/;"	c
AVOID	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    const AVOID: &'static str = "Â£ÃºÃ§Æ™Â¥Ã¡";$/;"	c
AbcdConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  struct AbcdConsumer<'a> {$/;"	s
AsBytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub trait AsBytes {$/;"	t
AsChar	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub trait AsChar {$/;"	t
B	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  struct B {$/;"	s
C	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  struct C {$/;"	s
CHARS	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^static CHARS: &'static[u8] = b"0123456789abcdef";$/;"	c
CONSUMED	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const CONSUMED: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨";$/;"	c
CONSUMED	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const CONSUMED: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡";$/;"	c
CONSUMED	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    const CONSUMED: &'static str = "";$/;"	c
CONSUMED	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    const CONSUMED: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡";$/;"	c
ChainConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub struct ChainConsumer<'a,'b, C1:'a,C2:'b,R,S,T,E,M> {$/;"	s
Consumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub trait Consumer<I,O,E,M> {$/;"	t
ConsumerState	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub enum ConsumerState<O,E=(),M=()> {$/;"	g
ERROR_PROMPT	/home/nash/code/recurse/rust/rush/src/main.rs	/^    const ERROR_PROMPT: &'static str =  "[0m[01;31m$[0m "; \/\/ our prompt is red$/;"	c
ERROR_PROMPT	/home/nash/code/recurse/rust/rush/src/main.rs	/^    const ERROR_PROMPT: &'static str = "[0m[01;31m$[0m "; \/\/ our prompt is red$/;"	c
Err	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^pub enum Err<P,E=u32>{$/;"	g
Error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^    struct Error(u32);$/;"	s
Error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/readline-0.0.12/src/lib.rs	/^pub enum Error {$/;"	g
ErrorKind	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub enum ErrorKind<E=u32> {$/;"	g
Expr	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^pub enum Expr {$/;"	g
FIND	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const FIND: &'static str = "RÃ¡Ã±Î´Ã´â‚¥";$/;"	c
FIND	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const FIND: &'static str = "Ã‚ÃŸÃ‡âˆ‚";$/;"	c
FIND	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const FIND: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡";$/;"	c
FIND	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    const FIND: &'static str = "Ã‚ÃŸÃ‡";$/;"	c
FileProducer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub struct FileProducer {$/;"	s
FileProducerState	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub enum FileProducerState {$/;"	g
FileType	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^struct FileType<'a> {$/;"	s
GetInput	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^pub trait GetInput<I> {$/;"	t
GetOutput	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^pub trait GetOutput<O> {$/;"	t
HexDisplay	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub trait HexDisplay {$/;"	t
INPUT	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const INPUT: &'static str = "Hello World!";$/;"	c
INPUT	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const INPUT: &'static str = "Hello";$/;"	c
INPUT	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const INPUT: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨";$/;"	c
INPUT	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const INPUT: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡Ã¡";$/;"	c
INPUT	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const INPUT: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡Ã¡Æ’Æ­Ã¨Å™";$/;"	c
INPUT	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const INPUT: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡âˆ‚Ã¡Æ’Æ­Ã¨Å™";$/;"	c
INPUT	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    const INPUT: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡Ã¡Æ’Æ­Ã¨Å™";$/;"	c
IResult	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^pub enum IResult<I,O,E=u32> {$/;"	g
Input	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub enum Input<I> {$/;"	g
InputLength	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub trait InputLength {$/;"	t
Item	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    type Item = &'a u8;$/;"	T
Item	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    type Item = char;$/;"	T
Item	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    type Item: AsChar;$/;"	T
Iter	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    type Iter : Iterator<Item=(usize, Self::Item)>;$/;"	T
Iter	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    type Iter = CharIndices<'a>;$/;"	T
Iter	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    type Iter = Enumerate<::std::slice::Iter<'a, u8>>;$/;"	T
IterIndices	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub trait IterIndices {$/;"	t
LEFTOVER	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const LEFTOVER: &'static str = "Ã‚ÃŸÃ‡âˆ‚Ã¡Æ’Æ­Ã¨Å™";$/;"	c
LEFTOVER	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const LEFTOVER: &'static str = "Ã¡Æ’Æ­Ã¨Å™";$/;"	c
LEFTOVER	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    const LEFTOVER: &'static str = "Ã¡Æ’Æ­Ã¨Å™";$/;"	c
LEFTOVER	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    const LEFTOVER: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡Ã¡Æ’Æ­Ã¨Å™";$/;"	c
LineConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  struct LineConsumer {$/;"	s
MATCH	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const MATCH: &'static str = "Ã›Ã±â„“ÃºÃ§Æ™Â¥";$/;"	c
MATCH	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const MATCH: &'static str = "Î²Ã¨Æ’Ã´Å™Ã¨Ã‚ÃŸÃ‡";$/;"	c
MP4BoxHeader	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^struct MP4BoxHeader {$/;"	s
MP4BoxType	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^enum MP4BoxType {$/;"	g
MP4Consumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^pub struct MP4Consumer {$/;"	s
MP4State	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^enum MP4State {$/;"	g
MapConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub struct MapConsumer<'a, C:'a,R,S,T,E,M,F> {$/;"	s
MemProducer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub struct MemProducer<'x> {$/;"	s
MoovBox	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^pub enum MoovBox {$/;"	g
Move	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub enum Move {$/;"	g
Mvhd32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^pub struct Mvhd32 {$/;"	s
Mvhd64	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^pub struct Mvhd64 {$/;"	s
MvhdBox	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^pub enum MvhdBox {$/;"	g
NORMAL_PROMPT	/home/nash/code/recurse/rust/rush/src/main.rs	/^    const NORMAL_PROMPT: &'static str = "$ ";$/;"	c
Needed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^pub enum Needed {$/;"	g
Oper	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^pub enum Oper {$/;"	g
Parser	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^  struct Parser<'a> {$/;"	s
Producer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub trait Producer<'b,I,M: 'b> {$/;"	t
ProducerRepeat	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub struct ProducerRepeat<I:Copy> {$/;"	s
Range	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^struct Range {$/;"	s
SeekState	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  enum SeekState {$/;"	g
SeekingConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  struct SeekingConsumer {$/;"	s
State	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  enum State {$/;"	g
State	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^enum State {$/;"	g
StateConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  struct StateConsumer<'a> {$/;"	s
Statement	/home/nash/code/recurse/rust/rush/src/main.rs	/^enum Statement<'a> {$/;"	g
StrConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  struct StrConsumer<'a> {$/;"	s
TAG	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const TAG: &'static str = "Hello World!";$/;"	c
TAG	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const TAG: &'static str = "Hello";$/;"	c
TAG	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^        const TAG: &'static str = "Random"; \/\/ TAG must be closer than INPUT.$/;"	c
TIMES	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    const TIMES: usize = 0;$/;"	c
TIMES	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    const TIMES: usize = 2;$/;"	c
TestConsumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^struct TestConsumer {$/;"	s
add_err	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn add_err() {$/;"	f
add_error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! add_error ($/;"	d
add_error_pattern	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn add_error_pattern<'a,I,O,E: Clone+Hash+Eq>(h: &mut HashMap<Vec<ErrorKind<E>>, &'a str>, res: IResult<I,O,E>, message: &'a str) -> bool {$/;"	f
add_history	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/readline-0.0.12/src/other.rs	/^pub fn add_history(_line: &str) -> Result<(), Error> { Ok(()) }$/;"	f
add_history	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/readline-0.0.12/src/unix.rs	/^pub fn add_history(line: &str) -> Result<(), Error> {$/;"	f
alpha	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn alpha<'a, T: ?Sized>(input:&'a T) -> IResult<&'a T, &'a T> where$/;"	f
alpha_or_underscore_or_dash	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn alpha_or_underscore_or_dash(c: char) -> bool {$/;"	f
alphanumeric	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn alphanumeric<'a, T: ?Sized>(input:&'a T) -> IResult<&'a T, &'a T> where$/;"	f
alt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn alt() {$/;"	f
alt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! alt ($/;"	d
alt1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn alt1(i:&[u8]) ->  IResult<&[u8],&[u8], &'static str> {$/;"	f
alt2	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn alt2(i:&[u8]) ->  IResult<&[u8],&[u8], &'static str> {$/;"	f
alt3	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn alt3(i:&[u8]) ->  IResult<&[u8],&[u8], &'static str> {$/;"	f
alt_complete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn alt_complete() {$/;"	f
alt_complete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! alt_complete ($/;"	d
alt_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn alt_incomplete() {$/;"	f
alt_parser	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! alt_parser ($/;"	d
anychar	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^pub fn anychar(input:&[u8]) -> IResult<&[u8], char> {$/;"	f
apply	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! apply ($/;"	d
apply	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn apply<'a, O,E>(&'b mut self, consumer: &'a mut Consumer<I,O,E,M>) -> &'a ConsumerState<O,E,M>;$/;"	f
apply	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn apply<'a,O,E>(&'b mut self, consumer: &'a mut Consumer<&'x[u8],O,E,Move>) -> &'a ConsumerState<O,E,Move> {$/;"	f
apply	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn apply<'a,O,E>(&'b mut self, consumer: &'a mut Consumer<I,O,E,M>) -> &'a ConsumerState<O,E,M> {$/;"	f
apply	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn apply<'a,O,E>(&'x mut self, consumer: &'a mut Consumer<&'x[u8],O,E,Move>) -> &'a ConsumerState<O,E,Move> {$/;"	f
apply_m	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^macro_rules! apply_m ($/;"	d
apply_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn apply_test() {$/;"	f
array_impls	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^macro_rules! array_impls {$/;"	d
as_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^      fn as_bytes<T: $crate::AsBytes>(b: &T) -> &[u8] {$/;"	f
as_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^        fn as_bytes<T: $crate::AsBytes>(b: &T) -> &[u8] {$/;"	f
as_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^        fn as_bytes<T: $crate::AsBytes>(b: &T) -> &[u8] {$/;"	f
as_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^        fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	f
as_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^  fn as_bytes(&self) -> &[u8];$/;"	f
as_char	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn as_char(self)     -> char { *self as char }$/;"	f
as_char	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn as_char(self)     -> char { self }$/;"	f
as_char	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn as_char(self)     -> char;$/;"	f
be_f32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_f32(input: &[u8]) -> IResult<&[u8], f32> {$/;"	f
be_f64	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_f64(input: &[u8]) -> IResult<&[u8], f64> {$/;"	f
be_i16	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_i16(i:&[u8]) -> IResult<&[u8], i16> {$/;"	f
be_i32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_i32(i:&[u8]) -> IResult<&[u8], i32> {$/;"	f
be_i64	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_i64(i:&[u8]) -> IResult<&[u8], i64> {$/;"	f
be_i8	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_i8(i:&[u8]) -> IResult<&[u8], i8> {$/;"	f
be_u16	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_u16(i: &[u8]) -> IResult<&[u8], u16> {$/;"	f
be_u32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_u32(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
be_u64	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_u64(i: &[u8]) -> IResult<&[u8], u64> {$/;"	f
be_u8	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn be_u8(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f
begin	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn begin(input: &[u8]) -> IResult<(), &[u8]> {$/;"	f
big_bunny_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^fn big_bunny_test() {$/;"	f
bits	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^macro_rules! bits ($/;"	d
bits_impl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^macro_rules! bits_impl ($/;"	d
bits_to_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^  fn bits_to_bytes() {$/;"	f
box_type	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^fn box_type(input: &[u8]) -> IResult<&[u8], MP4BoxType, u32> {$/;"	f
buffer_with_size	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn buffer_with_size() {$/;"	f
c	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/cross_function_backtracking.rs	/^macro_rules! c ($/;"	d
call	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! call ($/;"	d
call_m	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^macro_rules! call_m ($/;"	d
categories	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn categories(input: &[u8]) -> IResult<&[u8], HashMap<&str, HashMap<&str, &str> > > {$/;"	f
categories	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn categories(input: &str) -> IResult<&str, HashMap<&str, HashMap<&str, &str> > > {$/;"	f
category	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn category(input: &[u8]) -> IResult<&[u8], &str> {$/;"	f
chain	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! chain ($/;"	d
chain	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn chain() {$/;"	f
chain2	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn chain2() {$/;"	f
chain_bits	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^  fn chain_bits() {$/;"	f
chain_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn chain_incomplete() {$/;"	f
chain_mut	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn chain_mut() {$/;"	f
chain_opt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn chain_opt() {$/;"	f
chaining_parser	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! chaining_parser ($/;"	d
char	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^  fn char() {$/;"	f
char	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^macro_rules! char ($/;"	d
character	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn character() {$/;"	f
character_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn character_s() {$/;"	f
closure	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! closure ($/;"	d
code_from_offset	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn code_from_offset<E>(v: &[(ErrorKind<E>, usize, usize)], offset: usize) -> Option<u32> {$/;"	f
compare_error_paths	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn compare_error_paths<P,E:Clone+PartialEq>(e1:&Err<P,E>, e2:&Err<P,E>) -> bool {$/;"	f
compile_count_fixed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  pub fn compile_count_fixed(input: &[u8]) -> IResult<&[u8], ()> {$/;"	f
complete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn complete() {$/;"	f
complete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! complete ($/;"	d
cond	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn cond() {$/;"	f
cond	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! cond($/;"	d
cond_reduce	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! cond_reduce($/;"	d
cond_with_error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! cond_with_error($/;"	d
cond_wrapping	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn cond_wrapping() {$/;"	f
configurable_endianness	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn configurable_endianness() {$/;"	f
consume_main	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^  fn consume_main(&mut self, input: Input<&[u8]>) -> ConsumerState<(), (), Move> {$/;"	f
consume_moov	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^  fn consume_moov(&mut self, input: Input<&[u8]>) -> ConsumerState<(), (), Move> {$/;"	f
consumer_from_parser	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^macro_rules! consumer_from_parser ($/;"	d
count	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn count() {$/;"	f
count	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! count($/;"	d
count_fixed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn count_fixed() {$/;"	f
count_fixed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! count_fixed ($/;"	d
count_fixed_no_type	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn count_fixed_no_type() {$/;"	f
count_zero	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn count_zero() {$/;"	f
crlf	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^pub fn crlf(input:&[u8]) -> IResult<&[u8], char> {$/;"	f
custom_error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn custom_error(input: &[u8]) -> IResult<&[u8], &[u8], ()> {$/;"	f
cut	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/cross_function_backtracking.rs	/^macro_rules! cut ($/;"	d
dbg	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^macro_rules! dbg ($/;"	d
dbg_dmp	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^macro_rules! dbg_dmp ($/;"	d
delimited	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn delimited() {$/;"	f
delimited	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! delimited($/;"	d
description	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn description(&self) -> &str {$/;"	f
description	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    pub fn description(&self) -> &str {$/;"	f
description	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/readline-0.0.12/src/lib.rs	/^  fn description(&self) -> &str {$/;"	f
digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn digit<'a, T: ?Sized>(input:&'a T) -> IResult<&'a T, &'a T> where$/;"	f
dont_work	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn dont_work(input: &[u8]) -> IResult<&[u8],&[u8],&'static str> {$/;"	f
end_of_input	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^    fn end_of_input() {$/;"	f
eof	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn eof<'a, T:?Sized>(input: &'a T) -> IResult<&'a T,&'a T> where$/;"	f
err	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn err() {$/;"	f
error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! error ($/;"	d
error_to_list	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn error_to_list<P,E:Clone>(e:&Err<P,E>) -> Vec<ErrorKind<E>> {$/;"	f
error_to_string	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn error_to_string(e:Err) -> String$/;"	f
error_to_string	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn error_to_string<P>(e: &Err<P>) -> &'static str {$/;"	f
error_to_u32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn error_to_u32<E>(e: &ErrorKind<E>) -> u32 {$/;"	f
escape_transform	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn escape_transform() {$/;"	f
escaped	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! escaped ($/;"	d
escaped1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! escaped1 ($/;"	d
escaped_impl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! escaped_impl ($/;"	d
escaped_transform	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! escaped_transform ($/;"	d
escaped_transform1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! escaped_transform1 ($/;"	d
escaped_transform_impl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! escaped_transform_impl ($/;"	d
escaping	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn escaping() {$/;"	f
eval_tree	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn eval_tree(statements: Vec<Statement>) -> () {$/;"	f
exit_message	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn exit_message() -> &'static str {$/;"	f
explore_mp4_file	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^fn explore_mp4_file(filename: &str) {$/;"	f
exported_public_method_defined_by_macro	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/test1.rs	/^fn exported_public_method_defined_by_macro() {$/;"	f
expr_opt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! expr_opt ($/;"	d
expr_res	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! expr_res ($/;"	d
expr_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic.rs	/^fn expr_test() {$/;"	f
expr_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^fn expr_test() {$/;"	f
factor_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic.rs	/^fn factor_test() {$/;"	f
factor_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^fn factor_test() {$/;"	f
file	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn file() {$/;"	f
fix_error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! fix_error ($/;"	d
flat_map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! flat_map($/;"	d
flat_map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn flat_map<P,F>(&self, f: F) -> ConsumerState<P,E,M> where F: FnOnce(M, O) -> ConsumerState<P,E,M> {$/;"	f
fmt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^    fn fmt(&self, format: &mut Formatter) -> fmt::Result {$/;"	f
fmt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/readline-0.0.12/src/lib.rs	/^  fn fmt(&self, f: &mut Formatter) -> Result<(), fmt::Error> {$/;"	f
fold_exprs	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^fn fold_exprs(initial: Expr, remainder: Vec<(Oper, Expr)>) -> Expr {$/;"	f
fold_into_vec	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn fold_into_vec<T>(mut acc: Vec<T>, item: T) -> Vec<T> {$/;"	f
fold_many0	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn fold_many0() {$/;"	f
fold_many0	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! fold_many0($/;"	d
fold_many1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn fold_many1() {$/;"	f
fold_many1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! fold_many1($/;"	d
fold_many_m_n	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn fold_many_m_n() {$/;"	f
fold_many_m_n	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! fold_many_m_n($/;"	d
generate_colors	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn generate_colors<E>(v: &[(ErrorKind<E>, usize, usize)]) -> HashMap<u32, u8> {$/;"	f
get_line	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn get_line(producer: &mut FileProducer, mv: Move) -> Option<(Move,String)> {$/;"	f
get_prompt	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn get_prompt(return_status: &Result<()>) -> &'static str {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^      fn handle(&mut self, input: $crate::Input<$input>) -> & $crate::ConsumerState<$output, (), $crate::Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^      fn handle(&mut self, input: $crate::Input<&'a[u8]>) -> & $crate::ConsumerState<$output, (), $crate::Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn handle(&mut self, input: Input<&'a [u8]>) -> &ConsumerState<&'a [u8], (), Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn handle(&mut self, input: Input<&'a [u8]>) -> &ConsumerState<&'a [u8],(),Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn handle(&mut self, input: Input<&'a [u8]>) -> &ConsumerState<&'a str, (), Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn handle(&mut self, input: Input<&'a [u8]>) -> &ConsumerState<(), u8, Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn handle(&mut self, input: Input<&'a [u8]>) -> &ConsumerState<String, (), Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn handle(&mut self, input: Input<I>) -> &ConsumerState<O,E,M>;$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn handle(&mut self, input: Input<R>) -> &ConsumerState<T,E,M> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^  fn handle(&mut self, input: Input<&[u8]>) -> &ConsumerState<(), (), Move> {$/;"	f
handle	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^  fn handle(&mut self, input: Input<&'a [u8]>) -> &ConsumerState<usize,(),Move> {$/;"	f
hex_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn hex_digit<'a, T: ?Sized>(input:&'a T) -> IResult<&'a T, &'a T> where$/;"	f
hex_digit_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn hex_digit_test() {$/;"	f
hex_u32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn hex_u32(input: &[u8]) -> IResult<&[u8], u32> {$/;"	f
hex_u32_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn hex_u32_tests() {$/;"	f
i16	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^macro_rules! i16 ( ($i:expr, $e:expr) => ( {if $e { $crate::be_i16($i) } else { $crate::le_i16($i) } } ););$/;"	d
i16_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn i16_tests() {$/;"	f
i32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^macro_rules! i32 ( ($i:expr, $e:expr) => ( {if $e { $crate::be_i32($i) } else { $crate::le_i32($i) } } ););$/;"	d
i32_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn i32_tests() {$/;"	f
i64	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^macro_rules! i64 ( ($i:expr, $e:expr) => ( {if $e { $crate::be_i64($i) } else { $crate::le_i64($i) } } ););$/;"	d
i64_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn i64_tests() {$/;"	f
i8_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn i8_tests() {$/;"	f
impolite	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^fn impolite() {$/;"	f
infinite_many	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn infinite_many() {$/;"	f
input_len	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^  fn input_len(&self) -> usize {$/;"	f
input_len	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^  fn input_len(&self) -> usize;$/;"	f
iresult_map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn iresult_map() {$/;"	f
iresult_map_err	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn iresult_map_err() {$/;"	f
iresult_map_inc	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn iresult_map_inc() {$/;"	f
is_0_to_9	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_0_to_9(self)   -> bool { self.is_digit(10) }$/;"	f
is_0_to_9	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_0_to_9(self)   -> bool {$/;"	f
is_0_to_9	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_0_to_9(self)   -> bool;$/;"	f
is_a	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn is_a() {$/;"	f
is_a	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! is_a ($/;"	d
is_a_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! is_a_bytes ($/;"	d
is_a_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^macro_rules! is_a_s ($/;"	d
is_a_s_fail	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn is_a_s_fail() {$/;"	f
is_a_s_succeed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn is_a_s_succeed() {$/;"	f
is_alpha	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_alpha(self)    -> bool { self.is_alphabetic() }$/;"	f
is_alpha	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_alpha(self)    -> bool {$/;"	f
is_alpha	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_alpha(self)    -> bool;$/;"	f
is_alphabetic	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn is_alphabetic(chr:u8) -> bool {$/;"	f
is_alphabetic	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^  pub fn is_alphabetic(c:char) -> bool {$/;"	f
is_alphabetic	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn is_alphabetic(chr:char) -> bool {$/;"	f
is_alphanum	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_alphanum(self) -> bool { self.is_alpha() || self.is_0_to_9() }$/;"	f
is_alphanum	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_alphanum(self) -> bool;$/;"	f
is_alphanumeric	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn is_alphanumeric(chr: u8) -> bool {$/;"	f
is_alphanumeric	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn is_alphanumeric(chr: char) -> bool {$/;"	f
is_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn is_digit(chr: u8) -> bool {$/;"	f
is_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn is_digit(chr: char) -> bool {$/;"	f
is_done	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn is_done(&self) -> bool {$/;"	f
is_err	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn is_err(&self) -> bool {$/;"	f
is_hex_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn is_hex_digit(chr: u8) -> bool {$/;"	f
is_hex_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_hex_digit(self) -> bool { self.is_digit(16) }$/;"	f
is_hex_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_hex_digit(self) -> bool {$/;"	f
is_hex_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_hex_digit(self) -> bool;$/;"	f
is_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn is_incomplete(&self) -> bool {$/;"	f
is_known	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn is_known(&self) -> bool {$/;"	f
is_line_ending_or_comment	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn is_line_ending_or_comment(chr:char) -> bool {$/;"	f
is_not	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn is_not() {$/;"	f
is_not	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! is_not($/;"	d
is_not	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn is_not() {$/;"	f
is_not	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/test1.rs	/^fn is_not() {$/;"	f
is_not_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! is_not_bytes ($/;"	d
is_not_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^macro_rules! is_not_s ($/;"	d
is_not_s_fail	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn is_not_s_fail() {$/;"	f
is_not_s_succeed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^  fn is_not_s_succeed() {$/;"	f
is_oct_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn is_oct_digit(chr: u8) -> bool {$/;"	f
is_oct_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_oct_digit(self)   -> bool {$/;"	f
is_oct_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_oct_digit(self) -> bool { self.is_digit(8) }$/;"	f
is_oct_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn is_oct_digit(self) -> bool;$/;"	f
is_space	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn is_space(chr:u8) -> bool {$/;"	f
is_space	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn is_space(chr:char) -> bool {$/;"	f
is_whitespace	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn is_whitespace(c: char) -> bool {$/;"	f
issue_142	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^fn issue_142(){$/;"	f
issue_152	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^fn issue_152() {$/;"	f
issue_58	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^fn issue_58() {$/;"	f
issue_84	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn issue_84() {$/;"	f
iter_indices	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn iter_indices(self) -> CharIndices<'a> {$/;"	f
iter_indices	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn iter_indices(self) -> Enumerate<::std::slice::Iter<'a, u8>> {$/;"	f
iter_indices	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^    fn iter_indices(self) -> Self::Iter;$/;"	f
keys_and_values	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn keys_and_values(input:&[u8]) -> IResult<&[u8], HashMap<&str, &str> > {$/;"	f
keys_and_values	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn keys_and_values(input:&str) -> IResult<&str, HashMap<&str, &str> > {$/;"	f
le_i16	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_i16(i:&[u8]) -> IResult<&[u8], i16> {$/;"	f
le_i16_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn le_i16_tests() {$/;"	f
le_i32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_i32(i:&[u8]) -> IResult<&[u8], i32> {$/;"	f
le_i32_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn le_i32_tests() {$/;"	f
le_i64	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_i64(i:&[u8]) -> IResult<&[u8], i64> {$/;"	f
le_i64_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn le_i64_tests() {$/;"	f
le_i8	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_i8(i:&[u8]) -> IResult<&[u8], i8> {$/;"	f
le_i8_tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn le_i8_tests() {$/;"	f
le_u16	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_u16(i: &[u8]) -> IResult<&[u8], u16> {$/;"	f
le_u32	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_u32(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
le_u64	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_u64(i: &[u8]) -> IResult<&[u8], u64> {$/;"	f
le_u8	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn le_u8(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f
length_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! length_bytes($/;"	d
length_value	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! length_value($/;"	d
length_value	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn length_value(input:&[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
length_value_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn length_value_test() {$/;"	f
length_value_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn length_value_test() {$/;"	f
lf	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn lf(i:& u8) -> bool {$/;"	f
line_ending	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn line_ending(input:&[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
main	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn main() {$/;"	f
manual_configurable_endianness_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn manual_configurable_endianness_test() {$/;"	f
many0	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn many0() {$/;"	f
many0	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! many0($/;"	d
many0_bench	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn many0_bench(b: &mut Bencher) {$/;"	f
many1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn many1() {$/;"	f
many1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! many1($/;"	d
many_m_n	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn many_m_n() {$/;"	f
many_m_n	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! many_m_n($/;"	d
map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn map<F: FnOnce(usize) -> usize>(self, f: F) -> Needed {$/;"	f
map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn map<N, F: FnOnce(O) -> N>(self, f: F) -> IResult<I, N, E> {$/;"	f
map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! map($/;"	d
map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn map() {$/;"	f
map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn map<P,F>(&self, f: F) -> ConsumerState<P,E,M> where F: FnOnce(O) -> P {$/;"	f
map_err	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn map_err<N, F>(self, f: F) -> IResult<I, O, N>$/;"	f
map_impl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! map_impl($/;"	d
map_inc	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  pub fn map_inc<F>(self, f: F) -> IResult<I, O, E>$/;"	f
map_opt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! map_opt ($/;"	d
map_opt_impl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! map_opt_impl ($/;"	d
map_res	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! map_res ($/;"	d
map_res_impl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! map_res_impl ($/;"	d
mem	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn mem() {$/;"	f
mem2	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn mem2() {$/;"	f
method	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^macro_rules! method ($/;"	d
mp4_box	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^fn mp4_box(input:&[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
multispace	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn multispace<'a, T: ?Sized>(input:&'a T) -> IResult<&'a T, &'a T> where$/;"	f
mvhd_box	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^fn mvhd_box(input:&[u8]) -> IResult<&[u8],MvhdBox> {$/;"	f
n	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/cross_function_backtracking.rs	/^macro_rules! n ($/;"	d
named	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! named ($/;"	d
needed_map	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn needed_map() {$/;"	f
nested_chain	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn nested_chain() {$/;"	f
new	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^    pub fn new() -> Parser<'a> {$/;"	f
new	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^      fn new() -> $name {$/;"	f
new	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn new(buffer: &'x[u8], chunk_size: usize) -> MemProducer {$/;"	f
new	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn new(c1: &'a mut C1, c2: &'b mut C2) -> ChainConsumer<'a,'b,C1,C2,R,S,T,E,M> {$/;"	f
new	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn new(c: &'a mut C, f: F) -> MapConsumer<'a,C,R,S,T,E,M,F> {$/;"	f
new	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn new(filename: &str, buffer_size: usize) -> io::Result<FileProducer> {$/;"	f
new	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^  fn new() -> MP4Consumer {$/;"	f
no_nomnom	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^fn no_nomnom() {$/;"	f
nom1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^fn nom1() {$/;"	f
nomnomnom	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^fn nomnomnom() {$/;"	f
non_empty	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn non_empty<'a, T:?Sized>(input: &'a T) -> IResult<&'a T,&'a T> where$/;"	f
none_of	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^  fn none_of() {$/;"	f
none_of	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^macro_rules! none_of ($/;"	d
none_of_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^macro_rules! none_of_bytes ($/;"	d
not_line_ending	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn not_line_ending(input:&[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
oct_digit	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn oct_digit<'a, T: ?Sized>(input:&'a T) -> IResult<&'a T, &'a T> where$/;"	f
oct_digit_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn oct_digit_test() {$/;"	f
offset	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn offset() {$/;"	f
offset	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^  fn offset(&self, second:&[u8]) -> usize {$/;"	f
offset	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^  fn offset(&self, second:&[u8]) -> usize;\/\/ OFFSET SHOULD GO TO ITS OWN TRAIT$/;"	f
one_of	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^  fn one_of() {$/;"	f
one_of	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^macro_rules! one_of ($/;"	d
one_of_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^macro_rules! one_of_bytes ($/;"	d
opt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn opt() {$/;"	f
opt	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! opt($/;"	d
opt_res	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn opt_res() {$/;"	f
opt_res	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! opt_res ($/;"	d
output	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn output(&self) -> Option<&'a str> {$/;"	f
output	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn output(&self) -> Option<&'a[O]> {$/;"	f
output	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn output(&self) -> Option<()> {$/;"	f
output	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn output(&self) -> Option<O>;$/;"	f
pair	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn pair() {$/;"	f
pair	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! pair($/;"	d
parens_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic.rs	/^fn parens_test() {$/;"	f
parens_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^fn parens_test() {$/;"	f
parse_category_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn parse_category_test() {$/;"	f
parse_category_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn parse_category_test() {$/;"	f
parse_category_then_multiple_keys_and_values_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn parse_category_then_multiple_keys_and_values_test() {$/;"	f
parse_category_then_multiple_keys_and_values_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn parse_category_then_multiple_keys_and_values_test() {$/;"	f
parse_key_value_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn parse_key_value_test() {$/;"	f
parse_key_value_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn parse_key_value_test() {$/;"	f
parse_key_value_with_comment_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn parse_key_value_with_comment_test() {$/;"	f
parse_key_value_with_comment_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn parse_key_value_with_comment_test() {$/;"	f
parse_key_value_with_space_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn parse_key_value_with_space_test() {$/;"	f
parse_key_value_with_space_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn parse_key_value_with_space_test() {$/;"	f
parse_multiple_categories_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn parse_multiple_categories_test() {$/;"	f
parse_multiple_categories_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn parse_multiple_categories_test() {$/;"	f
parse_multiple_keys_and_values_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini.rs	/^fn parse_multiple_keys_and_values_test() {$/;"	f
parse_multiple_keys_and_values_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn parse_multiple_keys_and_values_test() {$/;"	f
parse_statements	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn parse_statements(input: &str) -> Vec<Statement> {$/;"	f
parsing	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn parsing(&self) -> &State {$/;"	f
peek	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn peek() {$/;"	f
peek	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! peek($/;"	d
position	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn position(&self) -> SeekState {$/;"	f
preceded	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn preceded() {$/;"	f
preceded	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! preceded($/;"	d
prelude	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/lib.rs	/^  pub mod prelude {$/;"	m
prepare_errors	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn prepare_errors<O,E: Clone>(input: &[u8], res: IResult<&[u8],O,E>) -> Option<Vec<(ErrorKind<E>, usize, usize)> > {$/;"	f
print	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn print<T: Debug>(input: T) -> IResult<T, ()> {$/;"	f
print	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/test1.rs	/^pub fn print<T: Debug>(input: T) -> IResult<T,()> {$/;"	f
print_codes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn print_codes(colors: HashMap<u32, u8>, names: HashMap<u32, &str>) -> String {$/;"	f
print_disclaimer	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn print_disclaimer() -> () {$/;"	f
print_error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn print_error<O,E:Clone>(input: &[u8], res: IResult<&[u8],O,E>) {$/;"	f
print_offsets	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn print_offsets<E>(input: &[u8], from: usize, offsets: &[(ErrorKind<E>, usize, usize)]) -> String {$/;"	f
pub_named_mod	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  mod pub_named_mod {$/;"	m
pub_named_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn pub_named_test() {$/;"	f
re_bytes_capture	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_capture() {$/;"	f
re_bytes_capture	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_capture ($/;"	d
re_bytes_capture_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_capture_static() {$/;"	f
re_bytes_capture_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_capture_static ($/;"	d
re_bytes_captures	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_captures() {$/;"	f
re_bytes_captures	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_captures ($/;"	d
re_bytes_captures_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_captures_static() {$/;"	f
re_bytes_captures_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_captures_static ($/;"	d
re_bytes_find	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_find() {$/;"	f
re_bytes_find	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_find ($/;"	d
re_bytes_find_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_find_static() {$/;"	f
re_bytes_find_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_find_static ($/;"	d
re_bytes_match	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_match() {$/;"	f
re_bytes_match	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_match ($/;"	d
re_bytes_match_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_match_static() {$/;"	f
re_bytes_match_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_match_static ($/;"	d
re_bytes_matches	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_matches() {$/;"	f
re_bytes_matches	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_matches ($/;"	d
re_bytes_matches_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_bytes_matches_static() {$/;"	f
re_bytes_matches_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_bytes_matches_static ($/;"	d
re_capture	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_capture() {$/;"	f
re_capture	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_capture ($/;"	d
re_capture_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_capture_static() {$/;"	f
re_capture_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_capture_static ($/;"	d
re_captures	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_captures() {$/;"	f
re_captures	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_captures ($/;"	d
re_captures_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_captures_static() {$/;"	f
re_captures_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_captures_static ($/;"	d
re_find	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_find() {$/;"	f
re_find	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_find ($/;"	d
re_find_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_find_static() {$/;"	f
re_find_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_find_static ($/;"	d
re_match	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_match() {$/;"	f
re_match	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_match ($/;"	d
re_match_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_match_static() {$/;"	f
re_match_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_match_static ($/;"	d
re_matches	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_matches() {$/;"	f
re_matches	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_matches ($/;"	d
re_matches_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^  fn re_matches_static() {$/;"	f
re_matches_static	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! re_matches_static ($/;"	d
readline	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/readline-0.0.12/src/other.rs	/^pub fn readline(prompt: &str) -> Result<String, Error> {$/;"	f
readline	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/readline-0.0.12/src/unix.rs	/^pub fn readline(prompt: &str) -> Result<String, Error> {$/;"	f
recognize	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn recognize() {$/;"	f
recognize	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! recognize ($/;"	d
recognize_take_while	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn recognize_take_while() {$/;"	f
ref	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^      static ref $re: ::regex::Regex = ::regex::Regex::new($s).unwrap();$/;"	c
ref	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^      static ref $re: ::regex::bytes::Regex = ::regex::bytes::Regex::new($s).unwrap();$/;"	c
refill	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn refill(&mut self) -> Option<usize> {$/;"	f
regex	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! regex ($/;"	d
regex_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/regexp.rs	/^macro_rules! regex_bytes ($/;"	d
remaining_input	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn remaining_input(&self) -> Option<&'a str> {$/;"	f
remaining_input	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn remaining_input(&self) -> Option<&'a[I]> {$/;"	f
remaining_input	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn remaining_input(&self) -> Option<()> {$/;"	f
remaining_input	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/internal.rs	/^  fn remaining_input(&self) -> Option<I>;$/;"	f
reset_color	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn reset_color(v: &mut Vec<u8>) {$/;"	f
resize	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn resize(&mut self, s: usize) -> usize {$/;"	f
rest	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn rest(input: &[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
ret_b1_2	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn ret_b1_2(i:&[u8]) -> IResult<&[u8], B> { Done(i,B{a:1,b:2}) };$/;"	f
ret_int1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn ret_int1(i:&[u8]) -> IResult<&[u8], u8> { Done(i,1) };$/;"	f
ret_int2	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn ret_int2(i:&[u8]) -> IResult<&[u8], u8> { Done(i,2) };$/;"	f
right_bracket	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/ini_str.rs	/^fn right_bracket(c:char) -> bool {$/;"	f
run	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn run<'a: 'b,O,E: 'b>(&'b mut self, consumer: &'a mut Consumer<I,O,E,M>)   -> Option<&O> {$/;"	f
run_statement	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn run_statement(statement: &str) -> Result<()> {$/;"	f
seeking_consumer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn seeking_consumer() {$/;"	f
separated_list	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn separated_list() {$/;"	f
separated_list	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! separated_list($/;"	d
separated_nonempty_list	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn separated_nonempty_list() {$/;"	f
separated_nonempty_list	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! separated_nonempty_list($/;"	d
separated_pair	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn separated_pair() {$/;"	f
separated_pair	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! separated_pair($/;"	d
shift	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^pub fn shift(s: &mut[u8], start: usize, end: usize) {$/;"	f
shift_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn shift_test() {$/;"	f
shift_window_and_cmp	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^      fn shift_window_and_cmp(window: & mut ::std::vec::Vec<char>, c: char, substr_vec: & ::std::vec::Vec<char>) -> bool {$/;"	f
shift_window_and_cmp	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^      fn shift_window_and_cmp(window: & mut Vec<char>, c: char, substr_vec: &Vec<char>) -> bool {$/;"	f
sized_buffer	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn sized_buffer(input:&[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
slice_to_offsets	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/util.rs	/^pub fn slice_to_offsets(input: &[u8], s: &[u8]) -> (usize, usize) {$/;"	f
small_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^fn small_test() {$/;"	f
space	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn space<'a, T: ?Sized>(input:&'a T) -> IResult<&'a T, &'a T> where$/;"	f
spaces_or_int	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^fn spaces_or_int(input: &[u8]) -> IResult<&[u8], i32>{$/;"	f
start_shell	/home/nash/code/recurse/rust/rush/src/main.rs	/^fn start_shell() {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^      fn state(&self) -> &$crate::ConsumerState<$output, (), $crate::Move> {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn state(&self) -> &ConsumerState<&'a [u8], (), Move> {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn state(&self) -> &ConsumerState<&'a str, (), Move> {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn state(&self) -> &ConsumerState<(), u8, Move> {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^    fn state(&self) -> &ConsumerState<String, (), Move> {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn state(&self) -> &ConsumerState<O,E,M>;$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  fn state(&self) -> &ConsumerState<T,E,M> {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/stream.rs	/^  pub fn state(&self) -> FileProducerState {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^  fn state(&self) -> &ConsumerState<(), (), Move> {$/;"	f
state	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/omnom.rs	/^  fn state(&self) -> &ConsumerState<usize,(),Move> {$/;"	f
std	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/lib.rs	/^mod std {$/;"	m
sum2	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn sum2(a:u8, b:u8)       -> u8 { a + b }$/;"	f
sum3	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn sum3(a:u8, b:u8, c:u8) -> u8 { a + b + c }$/;"	f
switch	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn switch() {$/;"	f
switch	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! switch ($/;"	d
switch_impl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^macro_rules! switch_impl ($/;"	d
t1	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn t1() {$/;"	f
tag	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! tag ($/;"	d
tag	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  macro_rules! tag ($/;"	d
tag	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/test1.rs	/^fn tag() {$/;"	f
tag_bits	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^  fn tag_bits() {$/;"	f
tag_bits	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^macro_rules! tag_bits ($/;"	d
tag_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! tag_bytes ($/;"	d
tag_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  macro_rules! tag_bytes ($/;"	d
tag_cl	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^pub fn tag_cl<'a,'b>(rec:&'a[u8]) ->  Box<Fn(&'b[u8]) -> IResult<&'b[u8], &'b[u8]> + 'a> {$/;"	f
tag_closure	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/nom.rs	/^  fn tag_closure() {$/;"	f
tag_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^  macro_rules! tag_s ($/;"	d
tag_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^macro_rules! tag_s ($/;"	d
tag_str_error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn tag_str_error() {$/;"	f
tag_str_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn tag_str_incomplete() {$/;"	f
tag_str_succeed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn tag_str_succeed() {$/;"	f
tag_stuff	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^    fn tag_stuff(mut self: Parser<'a>, input: &'a str, something: &'a str) -> (Parser<'a>, ::IResult<&'a str, &'a str>) {$/;"	f
take	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take ($/;"	d
take	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  macro_rules! take($/;"	d
take_bits	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^  fn take_bits() {$/;"	f
take_bits	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bits.rs	/^macro_rules! take_bits ($/;"	d
take_char	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^pub fn take_char(input: &[u8]) -> IResult<&[u8], char> {$/;"	f
take_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/methods.rs	/^  macro_rules! take_s ($/;"	d
take_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^macro_rules! take_s ($/;"	d
take_s_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn take_s_incomplete() {$/;"	f
take_s_succeed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn take_s_succeed() {$/;"	f
take_str	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_str ($/;"	d
take_str_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn take_str_test() {$/;"	f
take_till	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_till ($/;"	d
take_till_issue	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^fn take_till_issue() {$/;"	f
take_till_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^macro_rules! take_till_s ($/;"	d
take_till_s_succeed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^  fn take_till_s_succeed() {$/;"	f
take_until	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until($/;"	d
take_until_and_consume	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until_and_consume($/;"	d
take_until_and_consume_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until_and_consume_bytes ($/;"	d
take_until_and_consume_s	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^macro_rules! take_until_and_consume_s ($/;"	d
take_until_and_consume_s_error	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn take_until_and_consume_s_error() {$/;"	f
take_until_and_consume_s_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^    fn take_until_and_consume_s_incomplete() {$/;"	f
take_until_and_consume_s_succeed	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/str.rs	/^  fn take_until_and_consume_s_succeed() {$/;"	f
take_until_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until_bytes($/;"	d
take_until_either	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until_either($/;"	d
take_until_either_and_consume	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until_either_and_consume($/;"	d
take_until_either_and_consume_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until_either_and_consume_bytes($/;"	d
take_until_either_bytes	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^macro_rules! take_until_either_bytes($/;"	d
take_until_either_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/bytes.rs	/^  fn take_until_either_incomplete() {$/;"	f
take_until_incomplete	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec82t_incomplete() {$/;"	f
term_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic.rs	/^fn term_test() {$/;"	f
term_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/arithmetic_ast.rs	/^fn term_test() {$/;"	f
terminated	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn terminated() {$/;"	f
test_and_statement_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_and_statement_parser() {$/;"	f
test_argument	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_argument() {$/;"	f
test_compound_statement_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_compound_statement_parser() {$/;"	f
test_connective_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_connective_parser() {$/;"	f
test_empty_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_empty_parser() {$/;"	f
test_end_of_statement_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_end_of_statement_parser() {$/;"	f
test_err	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/cross_function_backtracking.rs	/^fn test_err() {$/;"	f
test_executable_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_executable_parser() {$/;"	f
test_exit_message	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_exit_message() {$/;"	f
test_multiple_statement_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_multiple_statement_parser() {$/;"	f
test_ok	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/cross_function_backtracking.rs	/^fn test_ok() {$/;"	f
test_or_statement_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_or_statement_parser() {$/;"	f
test_prompt_on_successful_exit	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_prompt_on_successful_exit() {$/;"	f
test_prompt_on_unsuccessful_exit	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_prompt_on_unsuccessful_exit() {$/;"	f
test_simple_statement_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_simple_statement_parser() {$/;"	f
test_statement_terminator_parser	/home/nash/code/recurse/rust/rush/src/main.rs	/^    fn test_statement_terminator_parser() {$/;"	f
tests	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/character.rs	/^mod tests {$/;"	m
tests	/home/nash/code/recurse/rust/rush/src/main.rs	/^mod tests {$/;"	m
tst	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^    fn tst(input: &[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
tuple_test	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/src/macros.rs	/^  fn tuple_test() {$/;"	f
unknown_box_type	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/mp4.rs	/^fn unknown_box_type(input:&[u8]) -> IResult<&[u8], MP4BoxType> {$/;"	f
usize_length_bytes_issue	/home/nash/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-1.2.3/tests/issues.rs	/^fn usize_length_bytes_issue(){$/;"	f
